#!/bin/zsh

.autocomplete.widget.c() {
  local func=.autocomplete.$3.completion-widget
  builtin autoload -Uz $func
  zle -C $1 $2 $func
}

.autocomplete.widget.z() {
  local func=.autocomplete.$2.zle-widget
  builtin autoload -Uz $func
  zle -N $1 $func
}

.autocomplete.widget.precmd() {
  emulate -L zsh -o extendedglob -o rcquotes

  add-zsh-hook -d precmd .autocomplete.widget.precmd

  local null
  if zstyle -s :autocomplete:tab: completion null; then
    print -u2 'Bad news: `zstyle -s '':autocomplete:tab:*'' completion` is no longer supported.'
    print -u2 'Good news: Different tab settings can now be combined! Please see the Readme.'
  fi

  local tab_style; for tab_style in complete-word menu-complete menu-select; do
    .autocomplete.widget.c $tab_style $tab_style complete-word
  done
  .autocomplete.widget.c reverse-menu-complete reverse-menu-complete complete-word

  # Declare these again, because compinit overrides them. See below.
  .autocomplete.widget.c list-expand complete-word list-expand
  .autocomplete.widget.c _history_search menu-select history-search
  .autocomplete.widget.z history-search history-search
  .autocomplete.widget.z up-line-or-search up-line-or-search
  .autocomplete.widget.z down-line-or-select down-line-or-select

  if [[ -v functions[_zsh_autosuggest_bind_widgets] ]]; then
    [[ -v ZSH_AUTOSUGGEST_IGNORE_WIDGETS ]] &&
      ZSH_AUTOSUGGEST_IGNORE_WIDGETS+=(
        prompt_\*
      )
    _zsh_autosuggest_bind_widgets
  fi
}

export ZSH_AUTOSUGGEST_MANUAL_REBIND=1

# Declare these already, so syntax highlighting doesn't complain. See above.
zmodload zsh/complist
.autocomplete.widget.c list-expand complete-word list-expand
.autocomplete.widget.c _history_search menu-select history-search
.autocomplete.widget.z history-search history-search
.autocomplete.widget.z up-line-or-search up-line-or-search
.autocomplete.widget.z down-line-or-select down-line-or-select

add-zsh-hook precmd .autocomplete.widget.precmd
